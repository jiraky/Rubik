/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package it.univr.rubikcube.gui;

import it.univr.rubikcube.model.RubikCubeModel;
import it.univr.rubikcube.resolutionstrategies.Fridrich;
import it.univr.rubikcube.resolutionstrategies.ResolutionStrategy;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Mattia
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        initCube();
        
    }
    
    public void updateInterface() {    
        this.cubedimension_value.setText(""+this.RubikCubeDimension);
        this.algorithm_value.setText(""+this.actualStrategy.toString());
        this.nummoves_value.setText(""+this.MovesCounter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MainLeftPanel = new javax.swing.JPanel();
        MainRightPanel = new javax.swing.JPanel();
        cubedimension_title = new javax.swing.JLabel();
        algorithm_title = new javax.swing.JLabel();
        nummoves_title = new javax.swing.JLabel();
        cubedimension_value = new javax.swing.JLabel();
        algorithm_value = new javax.swing.JLabel();
        nummoves_value = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Logo = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        menu_file_exit = new javax.swing.JMenuItem();
        menu_edit = new javax.swing.JMenu();
        menu_edit_numfaces = new javax.swing.JMenuItem();
        menu_edit_algorithm = new javax.swing.JMenuItem();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rubik Cube Solver");
        setName("MainFrame"); // NOI18N
        setResizable(false);

        MainLeftPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout MainLeftPanelLayout = new javax.swing.GroupLayout(MainLeftPanel);
        MainLeftPanel.setLayout(MainLeftPanelLayout);
        MainLeftPanelLayout.setHorizontalGroup(
            MainLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
        );
        MainLeftPanelLayout.setVerticalGroup(
            MainLeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        MainRightPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cubedimension_title.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cubedimension_title.setText("Cube dimension:");

        algorithm_title.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        algorithm_title.setText("Algorithm for ints:");

        nummoves_title.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        nummoves_title.setText("Number of moves:");

        cubedimension_value.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cubedimension_value.setText(" ");

        algorithm_value.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        algorithm_value.setText(" ");

        nummoves_value.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nummoves_value.setText(" ");

        javax.swing.GroupLayout MainRightPanelLayout = new javax.swing.GroupLayout(MainRightPanel);
        MainRightPanel.setLayout(MainRightPanelLayout);
        MainRightPanelLayout.setHorizontalGroup(
            MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainRightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(MainRightPanelLayout.createSequentialGroup()
                        .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(algorithm_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cubedimension_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nummoves_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cubedimension_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(algorithm_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nummoves_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        MainRightPanelLayout.setVerticalGroup(
            MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainRightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cubedimension_title)
                    .addComponent(cubedimension_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithm_title)
                    .addComponent(algorithm_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MainRightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nummoves_title)
                    .addComponent(nummoves_value))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(283, Short.MAX_VALUE))
        );

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        Logo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        menu_file.setMnemonic('f');
        menu_file.setText("File");

        menu_file_exit.setMnemonic('x');
        menu_file_exit.setText("Exit");
        menu_file_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_file_exitActionPerformed(evt);
            }
        });
        menu_file.add(menu_file_exit);

        menuBar.add(menu_file);

        menu_edit.setMnemonic('e');
        menu_edit.setText("Edit");

        menu_edit_numfaces.setText("Number of Faces");
        menu_edit_numfaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_edit_numfacesActionPerformed(evt);
            }
        });
        menu_edit.add(menu_edit_numfaces);

        menu_edit_algorithm.setText("Algorithm");
        menu_edit_algorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_edit_algorithmActionPerformed(evt);
            }
        });
        menu_edit.add(menu_edit_algorithm);

        menuBar.add(menu_edit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainLeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MainRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MainLeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Logo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MainRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menu_file_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_file_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menu_file_exitActionPerformed

    private void menu_edit_numfacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_edit_numfacesActionPerformed
        NumFaces n = new NumFaces(this, true);
        n.setVisible(true);
        if(n.getReturnStatus()) {
            this.setCubeDimension(n.getSelectedFaces());
        }
        
    }//GEN-LAST:event_menu_edit_numfacesActionPerformed

    private void menu_edit_algorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_edit_algorithmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menu_edit_algorithmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JPanel MainLeftPanel;
    private javax.swing.JPanel MainRightPanel;
    private javax.swing.JLabel algorithm_title;
    private javax.swing.JLabel algorithm_value;
    private javax.swing.JLabel cubedimension_title;
    private javax.swing.JLabel cubedimension_value;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menu_edit;
    private javax.swing.JMenuItem menu_edit_algorithm;
    private javax.swing.JMenuItem menu_edit_numfaces;
    private javax.swing.JMenu menu_file;
    private javax.swing.JMenuItem menu_file_exit;
    private javax.swing.JLabel nummoves_title;
    private javax.swing.JLabel nummoves_value;
    // End of variables declaration//GEN-END:variables

    private RubikCubeModel cube;
    
    private List<ResolutionStrategy> availableStrategy;
    private ResolutionStrategy actualStrategy;
    private int RubikCubeDimension = 3;
    private int MovesCounter = 0;

    private void initCube() {     
        this.cube = new RubikCubeModel(this.getCubeDimension());
        
        this.availableStrategy = new LinkedList<>();
        this.availableStrategy.add(new Fridrich(this.cube));
        this.actualStrategy = this.availableStrategy.get(0);
        
        
        
        updateInterface();
    }
    
    public int getCubeDimension() {
        return this.RubikCubeDimension;
    }
    public void setCubeDimension(int n) {
        if(JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(
                rootPane, 
                "This action will reset the cube. Are you sure?", 
                "Confirm reset", 
                JOptionPane.YES_NO_OPTION, 
                JOptionPane.WARNING_MESSAGE)) {
            this.RubikCubeDimension = n;
            initCube();
        }
        updateInterface();
    }
    public int getMovesCounter() {
        return this.MovesCounter;
    }
    public void setMovesCounter(int n) {
        this.MovesCounter = n;
        updateInterface();
    }
}
